diff --git a/packages/opencode/src/provider/provider.ts b/packages/opencode/src/provider/provider.ts
index c18bc489..5a2d21f4 100644
--- a/packages/opencode/src/provider/provider.ts
+++ b/packages/opencode/src/provider/provider.ts
@@
     const provider = s.providers[providerID]
     if (!provider) throw new ModelNotFoundError({ providerID, modelID })
     const info = provider.info.models[modelID]
     if (!info) throw new ModelNotFoundError({ providerID, modelID })
 
+    const factoryModule =
+      provider.options && typeof provider.options.providerFactory === "string"
+        ? provider.options.providerFactory
+        : undefined
+
+    if (factoryModule) {
+      const mod = await import(factoryModule)
+      const factory =
+        typeof mod.createCodexProvider === "function"
+          ? mod.createCodexProvider
+          : typeof mod.default === "function"
+            ? mod.default
+            : mod.default && typeof mod.default.createCodexProvider === "function"
+              ? mod.default.createCodexProvider
+              : undefined
+
+      if (!factory) {
+        throw new InitError(
+          { providerID },
+          { cause: new Error(`Custom provider factory did not expose createCodexProvider in ${factoryModule}`) },
+        )
+      }
+
+      const language = factory().languageModel(modelID)
+      log.info("found", { providerID, modelID, source: "custom-factory" })
+      const result = {
+        modelID,
+        providerID,
+        info,
+        language,
+        npm: info.provider?.npm ?? provider.info.npm,
+      }
+      s.models.set(key, result)
+      return result
+    }
+
     const sdk = await getSDK(provider.info, info)
 
     try {
       const language = provider.getModel ? await provider.getModel(sdk, modelID) : sdk.languageModel(modelID)
       log.info("found", { providerID, modelID })
